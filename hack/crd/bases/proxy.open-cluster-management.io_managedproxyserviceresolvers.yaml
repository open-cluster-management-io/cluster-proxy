---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: managedproxyserviceresolvers.proxy.open-cluster-management.io
spec:
  group: proxy.open-cluster-management.io
  names:
    kind: ManagedProxyServiceResolver
    listKind: ManagedProxyServiceResolverList
    plural: managedproxyserviceresolvers
    singular: managedproxyserviceresolver
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ManagedProxyServiceResolver defines a target service that need to expose from a set of managed clusters to the hub.
          To access a target service on a managed cluster from hub. First, users need to apply a proper ManagedProxyServiceResolver.
          The managed cluster should match the ManagedClusterSet in the ManagedProxyServiceResolver.Spec. The serviceNamespace and serviceName should also match the target service.
          A usage example: /examples/access-other-services/main.go
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ManagedProxyServiceResolverSpec defines the desired state
              of ManagedProxyServiceResolver.
            properties:
              managedClusterSelector:
                description: ManagedClusterSelector selects a set of managed clusters.
                properties:
                  managedClusterSet:
                    description: ManagedClusterSet defines a set of managed clusters
                      that need to expose the service.
                    properties:
                      name:
                        description: Name is the name of the managed cluster set.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: ManagedClusterSet
                    description: Type represents the type of the selector. Now only
                      ManagedClusterSet is supported.
                    enum:
                    - ManagedClusterSet
                    type: string
                type: object
              serviceSelector:
                description: ServiceSelector selects a service.
                properties:
                  serviceRef:
                    description: ServiceRef defines a service in a namespace.
                    properties:
                      name:
                        description: Name represents the name of the service.
                        type: string
                      namespace:
                        description: Namespace represents the namespace of the service.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  type:
                    default: ServiceRef
                    description: Type represents the type of the selector. Now only
                      ServiceRef type is supported.
                    enum:
                    - ServiceRef
                    type: string
                type: object
            required:
            - managedClusterSelector
            - serviceSelector
            type: object
          status:
            description: ManagedProxyServiceResolverStatus defines the observed state
              of ManagedProxyServiceResolver.
            properties:
              conditions:
                description: Conditions contains the different condition statuses
                  for this ManagedProxyServiceResolver.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
